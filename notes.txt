
once you create project change server port in application.properties file 
server.port=9999


configure jsp support in project 
0)  create WEB-INF folder , inside WEB-INF create views 
	WEB-INF must be inside webapp folder 
	webapp must be inside main folder 

1) write below line in application.properties 
	spring.mvc.view.prefix=WEB-INF/views/
	spring.mvc.view.suffix=.jsp
	
2) add tomcat embeded jasper --> maven
	pom.xml 
	
------------------------------------------------------------
create controller SessionController --> @Controller 

create url signup --> @Getmapping --> you can directly use that user in browser 
load --> Signup.jsp 


-------------------------------------
backend developer -- api [spring boot , NODE ] 

frontend developer -- android , iphone 
			angular , react 


node | spring boot[SqL][web->noSql] | 

angular | react | vue | next  | XXX |XXX

RoR 



boot --> zero configuration 

spring.xml --> 0 .xml 
	--> application.properties 



jsp servlet
spring web 

http --> view technology --> jsp 



response --> REST protocol  --> json 



				amazon
		website[apis]	android[apis]	iphone[apis] 	



			backend [ input output ] 
			urls -- apis [write once run anywhere ] 
				     [consume ] 
			

			database 
[    products | carts | users | payment | orders    ]




mongodb 

noSql 

	data -> key:value 
	Apache Ignite 
	couchbase 
	Azure cosmos db 


	row-->
	apache River 
	 


spring boot --> REST api 


------------------REST-----------------------

1) response --> json 
2) user --> table -> add , remove , modify , read -> single , multiple 

urls -> user
		/users 					POST 		insert 
		/users/userId			DELETE		remove 
		/users					GET			read -> all [ rows ]
		/users/userId			GET			read -> single [row ] 
		/users					PUT			modify - update 

product 
		/products 				POST		add 
		/products				GET 		read all 
		/products				PUT			modify-update 
		/products/userId		GET			read single 
		/products/userId		DELETE		remove 
		
-------------------------------------------------------------------
boot application --> db connect 

		1) pg driver [ edit starter ]  
		2) spring jdbc [ edit starter ] 
		3) configuration for database -- dirvername url username and password 
		   below line should be in application.properties   
		    spring.datasource.driver-class-name=org.postgresql.Driver
			spring.datasource.url=jdbc:postgresql://localhost:5434/esociety
			spring.datasource.username=postgres
			spring.datasource.password=root
		
		
		create eSociety database 
		create role table inside schema of eSociety 
		column -> roleid : serial : not null primary key 
				  rolename : chara varying : 20 : not null 
-------------------------------------------------------------------
		
		
		 
		
		
		
		
		
















